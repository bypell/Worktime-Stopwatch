name: Builds

on: 
  workflow_dispatch:
  push:
  pull_request:

# concurrency:
#   group: "${{ github.workflow }}-${{ github.ref_name }}"
#   cancel-in-progress: true

jobs:
  build:
    runs-on:  ${{matrix.os}}
    name: ${{matrix.name}}
    strategy:
      matrix:
        include:
          - identifier: windows-debug
            os: windows-latest
            name: üèÅ Windows Debug
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: linux-debug
            os: ubuntu-latest
            name: üêß Linux Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64
    steps:

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Move LICENSE file to /addons
        run: |
          cp LICENSE addons/worktime_stopwatch/LICENSE

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config

      - name: Setup MinGW for Windows/MinGW build
        if: ${{ matrix.platform == 'windows' }}
        uses: egor-tensin/setup-mingw@v2
        with:
          version: 12.2.0

      - name: Compile godot-cpp
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'
        working-directory: godot-cpp

      - name: Compile Extension
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'

      - name: Delete compilation files
        if: ${{ matrix.platform == 'windows' }}
        run: |
          Remove-Item addons/worktime_stopwatch/bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact (addons folder)
        uses: actions/upload-artifact@v4
        with:
          name: worktime_stopwatch_plugin-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}
          path: |
            ${{ github.workspace }}/addons/**
        
  merge:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: addons
          pattern: worktime_stopwatch_plugin-*
          delete-merged: true